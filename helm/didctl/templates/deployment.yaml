{{- $fullName := include "didctl.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "didctl.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "didctl.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "didctl.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      restartPolicy: {{ .Values.restartPolicy }}
      serviceAccountName: {{ include "didctl.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "didctl.fullname" . }}
        {{- if .Values.configuration.agent.rpc.tls.enabled }}
        - name: tls
          secret:
            secretName: {{ .Values.tlsSecretName }}
        {{- end }}
        {{- if .Values.persistence.enabled }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ printf "%s-storage" $fullName }}
        {{- end }}
      containers:
        - name: main
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: config
              mountPath: /etc/didctl
            {{- if .Values.configuration.agent.rpc.tls.enabled }}
            - name: tls
              mountPath: /etc/didctl/agent
              readOnly: true
            {{- end }}
            {{- if .Values.persistence.enabled }}
            - name: storage
              mountPath: /etc/didctl/agent/data
            {{- end }}
          args:
            - "agent"
            - "--config"
            - "/etc/didctl/config.yaml"
          ports:
            - name: rpc
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            failureThreshold: 3
            httpGet:
              {{- if .Values.configuration.agent.rpc.tls.enabled }}
              scheme: HTTPS
              {{- end }}
              path: /v1/ping
              port: rpc
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            failureThreshold: 3
            httpGet:
              {{- if .Values.configuration.agent.rpc.tls.enabled }}
              scheme: HTTPS
              {{- end }}
              path: /v1/ping
              port: rpc
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
